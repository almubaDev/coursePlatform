# Generated by Django 5.2 on 2025-04-05 23:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConceptConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='título')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
            ],
            options={
                'verbose_name': 'ejercicio de conexión',
                'verbose_name_plural': 'ejercicios de conexión',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='título')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='descripción')),
                ('image', models.ImageField(blank=True, upload_to='courses/%Y/%m/%d/', verbose_name='imagen')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='fecha de actualización')),
                ('is_published', models.BooleanField(default=False, verbose_name='publicado')),
            ],
            options={
                'verbose_name': 'curso',
                'verbose_name_plural': 'cursos',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='EssayTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='título')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='fecha de actualización')),
            ],
            options={
                'verbose_name': 'test de desarrollo',
                'verbose_name_plural': 'tests de desarrollo',
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=500, verbose_name='pregunta')),
                ('explanation', models.TextField(blank=True, help_text='Explicación que se mostrará después de responder', verbose_name='explicación')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
            ],
            options={
                'verbose_name': 'pregunta de alternativas',
                'verbose_name_plural': 'preguntas de alternativas',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='título')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
            ],
            options={
                'verbose_name': 'test de alternativas',
                'verbose_name_plural': 'tests de alternativas',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=200, verbose_name='término')),
                ('definition', models.TextField(verbose_name='definición')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concepts', to='courses.conceptconnection', verbose_name='ejercicio')),
            ],
            options={
                'verbose_name': 'concepto',
                'verbose_name_plural': 'conceptos',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='EssayAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_submitted', models.DateTimeField(auto_now_add=True, verbose_name='fecha de envío')),
                ('date_analyzed', models.DateTimeField(blank=True, null=True, verbose_name='fecha de análisis')),
                ('status', models.CharField(choices=[('submitted', 'Enviado'), ('processing', 'Procesando'), ('analyzed', 'Analizado'), ('failed', 'Falló análisis')], default='submitted', max_length=20, verbose_name='estado')),
                ('ai_feedback', models.TextField(blank=True, verbose_name='retroalimentación IA')),
                ('score', models.FloatField(blank=True, null=True, verbose_name='puntuación')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='essay_attempts', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='courses.essaytest', verbose_name='test')),
            ],
            options={
                'verbose_name': 'intento de test',
                'verbose_name_plural': 'intentos de test',
                'ordering': ['-date_submitted'],
                'unique_together': {('user', 'test')},
            },
        ),
        migrations.CreateModel(
            name='EssayQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='pregunta')),
                ('question_type', models.CharField(choices=[('regular', 'Regular'), ('case_study', 'Estudio de caso')], default='regular', max_length=20, verbose_name='tipo de pregunta')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='courses.essaytest', verbose_name='test')),
            ],
            options={
                'verbose_name': 'pregunta de desarrollo',
                'verbose_name_plural': 'preguntas de desarrollo',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='título')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='fecha de actualización')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.course', verbose_name='curso')),
            ],
            options={
                'verbose_name': 'módulo',
                'verbose_name_plural': 'módulos',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='essaytest',
            name='module',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='essay_test', to='courses.module', verbose_name='módulo'),
        ),
        migrations.CreateModel(
            name='MultipleChoiceOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(max_length=255, verbose_name='opción')),
                ('is_correct', models.BooleanField(default=False, verbose_name='es correcta')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='courses.multiplechoicequestion', verbose_name='pregunta')),
            ],
            options={
                'verbose_name': 'opción',
                'verbose_name_plural': 'opciones',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='multiplechoicequestion',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='courses.multiplechoicetest', verbose_name='test'),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='título')),
                ('content', models.TextField(verbose_name='contenido en markdown')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='fecha de actualización')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='courses.module', verbose_name='módulo')),
            ],
            options={
                'verbose_name': 'sección',
                'verbose_name_plural': 'secciones',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='multiplechoicetest',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_choice_tests', to='courses.section', verbose_name='sección'),
        ),
        migrations.CreateModel(
            name='FlashCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500, verbose_name='pregunta')),
                ('answer', models.TextField(verbose_name='respuesta')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcards', to='courses.section', verbose_name='sección')),
            ],
            options={
                'verbose_name': 'flashcard',
                'verbose_name_plural': 'flashcards',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='conceptconnection',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concept_connections', to='courses.section', verbose_name='sección'),
        ),
        migrations.CreateModel(
            name='TestCoupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('is_used', models.BooleanField(default=False, verbose_name='usado')),
                ('used_date', models.DateTimeField(blank=True, null=True, verbose_name='fecha de uso')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to='courses.essaytest', verbose_name='test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_coupons', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'cupón de test',
                'verbose_name_plural': 'cupones de test',
            },
        ),
        migrations.CreateModel(
            name='EssayAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(verbose_name='respuesta')),
                ('ai_feedback', models.TextField(blank=True, verbose_name='retroalimentación IA')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='courses.essayattempt', verbose_name='intento')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='courses.essayquestion', verbose_name='pregunta')),
            ],
            options={
                'verbose_name': 'respuesta de desarrollo',
                'verbose_name_plural': 'respuestas de desarrollo',
                'unique_together': {('attempt', 'question')},
            },
        ),
    ]
